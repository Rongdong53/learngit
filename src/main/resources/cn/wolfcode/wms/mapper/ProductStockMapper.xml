<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="cn.wolfcode.wms.mapper.ProductStockMapper" >
  <resultMap id="BaseResultMap" type="cn.wolfcode.wms.domain.ProductStock" >
    <id column="id" property="id" />
    <result column="price" property="price" />
    <result column="store_number" property="storeNumber" />
    <result column="amount" property="amount" />
   	<association property="product" javaType="Product" columnPrefix="p_">
		<result property="id" column="id" />
		<result property="sn" column="sn"/>
	   	<result property="name" column="name" />
	   	<result property="brandName" column="brandName"/>
		<result property="costPrice" column="costPrice" />
   	</association>
	<association property="depot" javaType="Depot" columnPrefix="d_">
		<result property="id" column="id" />
		<result property="name" column="name" />
	</association>
  </resultMap>

  <insert id="insert" parameterType="cn.wolfcode.wms.domain.ProductStock" useGeneratedKeys="true" keyProperty="id" >
    insert into `productstock` (price, store_number, amount, product_id, depot_id)
    values (#{price}, #{storeNumber}, #{amount}, #{product.id}, #{depot.id})
  </insert>
  <update id="updateByPrimaryKey" parameterType="cn.wolfcode.wms.domain.ProductStock" >
    update `productstock`
    set price = #{price},
      store_number = #{storeNumber},
      amount = #{amount},
      product_id = #{product.id},
      depot_id = #{depot.id}
    where id = #{id}
  </update>
  <select id="selectByProductIdAndDepotId" resultMap="BaseResultMap">
  	SELECT
		ps.id,
		ps.price,
		ps.store_number,
		ps.amount,
		p.id AS p_id,
		p.`name` AS p_name,
		p.cost_price AS p_costPrice,
		d.id AS d_id,
		d.`name` AS d_name
	FROM
		`productstock` ps
	LEFT JOIN product p ON ps.product_id = p.id
	LEFT JOIN depot d ON ps.depot_id = d.id
	WHERE
		p.id = #{productId} AND d.id = #{depotId}
  </select>
  <sql id="baseSql">
  	<where>
  		<if test="keywords != null">
  			AND (p.name LIKE CONCAT('%',#{keywords},'%') OR p.sn LIKE CONCAT('%',#{keywords},'%'))
  		</if>
  		<if test="depotId > 0">
  			AND d.id = #{depotId}
  		</if>
  		<if test="brandId > 0">
  			AND p.brand_id = #{brandId}
  		</if>
  		<if test="limitNumber != null">
  			AND ps.store_number &lt;= #{limitNumber}
  		</if>
  	</where>
  </sql>
  <select id="queryForCount" resultType="int">
  	SELECT COUNT(ps.id) FROM `productstock` ps JOIN product p ON ps.product_id = p.id JOIN depot d ON ps.depot_id = d.id 
  	<include refid="baseSql"/>
  </select>
  <select id="queryForList" resultMap="BaseResultMap">
  	SELECT
		ps.id,ps.price,ps.store_number,ps.amount,
		p.id p_id,p.`sn` p_sn,p.`name` p_name,p.brand_name p_brandName,
		d.id d_id, d.`name` d_name
	FROM
		`productstock` ps
	JOIN product p ON ps.product_id = p.id
	JOIN depot d ON ps.depot_id = d.id
	<include refid="baseSql"/>
	LIMIT #{start},#{pageSize}
  </select>
</mapper>